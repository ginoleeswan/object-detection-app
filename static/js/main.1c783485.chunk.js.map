{"version":3,"sources":["utilities.js","App.js","index.js"],"names":["drawRect","detections","ctx","forEach","prediction","x","y","width","height","text","strokeStyle","font","fillStyle","lineWidth","textBaseline","beginPath","fillText","rect","stroke","App","useState","cameraFace","setCameraFace","webcamRef","useRef","canvasRef","runCoco","a","cocossd","net","setInterval","detect","current","video","readyState","videoWidth","videoHeight","obj","console","log","getContext","useEffect","className","ref","muted","videoConstraints","facingMode","onClick","e","preventDefault","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+bAEaA,G,cAAW,SAACC,EAAYC,GACnCD,EAAWE,SAAQ,SAACC,GAElB,kBAA8BA,EAAU,KAAxC,GAAOC,EAAP,KAAUC,EAAV,KAAaC,EAAb,KAAoBC,EAApB,KACMC,EAAOL,EAAU,MAIvBF,EAAIQ,YADU,MAEdR,EAAIS,KAAO,iBACXT,EAAIU,UAHU,MAIdV,EAAIW,UAAY,GAChBX,EAAIY,aAAe,SAGnBZ,EAAIa,YAEJb,EAAIc,SAASP,EAAMJ,EAAGC,GACtBJ,EAAIe,KAAKZ,EAAGC,EAAGC,EAAOC,GACtBN,EAAIgB,c,QCqFOC,MA7Ff,WACE,MAAoCC,mBAAS,QAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAYC,iBAAO,MACnBC,EAAYD,iBAAO,MAGnBE,EAAO,uCAAG,4BAAAC,EAAA,sEAEIC,SAFJ,OAERC,EAFQ,OAKdC,aAAY,WACVC,EAAOF,KACN,IAPW,2CAAH,qDAUPE,EAAM,uCAAG,WAAOF,GAAP,uBAAAF,EAAA,yDAGkB,qBAAtBJ,EAAUS,SACK,OAAtBT,EAAUS,SAC6B,IAAvCT,EAAUS,QAAQC,MAAMC,WALb,wBAQLD,EAAQV,EAAUS,QAAQC,MAC1BE,EAAaZ,EAAUS,QAAQC,MAAME,WACrCC,EAAcb,EAAUS,QAAQC,MAAMG,YAG5Cb,EAAUS,QAAQC,MAAM1B,MAAQ4B,EAChCZ,EAAUS,QAAQC,MAAMzB,OAAS4B,EAGjCX,EAAUO,QAAQzB,MAAQ4B,EAC1BV,EAAUO,QAAQxB,OAAS4B,EAlBhB,UAqBOP,EAAIE,OAAOE,GArBlB,QAqBLI,EArBK,OAsBXC,QAAQC,IAAIF,GAGNnC,EAAMuB,EAAUO,QAAQQ,WAAW,MAIzCxC,EAASqC,EAAKnC,GA7BH,4CAAH,sDAgDZ,OAfAuC,qBAAU,WACRf,MACC,IAcD,sBAAKgB,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,wCAEF,kCACE,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CACEC,IAAKpB,EACLqB,OAAO,EACPC,iBAAkB,CAAEC,WAAY,eAChCJ,UAAU,WAEZ,wBAAQC,IAAKlB,EAAWiB,UAAU,gBAGtC,yBAAQA,UAAU,aAAlB,UACE,qBAAKA,UAAU,wBAAf,SACE,cAAC,IAAD,CAAiBA,UAAU,cAAcK,QA7BjD,SAAoBC,GAClBA,EAAEC,iBACiB,SAAf5B,EACFC,EAAc,eACU,gBAAfD,GACTC,EAAc,QAEhBgB,QAAQC,IAAI,kBACZD,QAAQC,IAAIlB,QAuBR,qBAAKqB,UAAU,kBAAf,SACE,iEC9FVQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1c783485.chunk.js","sourcesContent":["import { createEvent } from \"@testing-library/react\";\n\nexport const drawRect = (detections, ctx) => {\n  detections.forEach((prediction) => {\n    // Get prediction results\n    const [x, y, width, height] = prediction[\"bbox\"];\n    const text = prediction[\"class\"];\n\n    // set styling\n    const color = \"red\";\n    ctx.strokeStyle = color;\n    ctx.font = \"50px Helvetica\";\n    ctx.fillStyle = color;\n    ctx.lineWidth = 10;\n    ctx.textBaseline = \"bottom\";\n\n    // draw rectangles and text\n    ctx.beginPath();\n    // ctx.scale(-1, 1);\n    ctx.fillText(text, x, y);\n    ctx.rect(x, y, width, height);\n    ctx.stroke();\n  });\n};\n","// Import dependencies\nimport React, { useRef, useState, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport { IoCameraReverse } from \"react-icons/io5\";\n\n// 1. TODO - Import required model here\n// e.g. import * as tfmodel from \"@tensorflow-models/tfmodel\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\n// 2. TODO - Import drawing utility here\nimport { drawRect } from \"./utilities\";\n\nfunction App() {\n  const [cameraFace, setCameraFace] = useState(\"user\");\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Main function\n  const runCoco = async () => {\n    // 3. TODO - Load network\n    const net = await cocossd.load();\n\n    //  Loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const detect = async (net) => {\n    // Check data is available\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // 4. TODO - Make Detections\n      const obj = await net.detect(video);\n      console.log(obj);\n\n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n\n      // 5. TODO - Update drawing utility\n      // drawSomething(obj, ctx)\n      drawRect(obj, ctx);\n    }\n  };\n\n  useEffect(() => {\n    runCoco();\n  }, []);\n\n  function swapCamera(e) {\n    e.preventDefault();\n    if (cameraFace === \"user\") {\n      setCameraFace(\"environment\");\n    } else if (cameraFace === \"environment\") {\n      setCameraFace(\"user\");\n    }\n    console.log(\"camera swapped\");\n    console.log(cameraFace);\n  }\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h2>iSpy</h2>\n      </header>\n      <section>\n        <div className=\"container\">\n          <Webcam\n            ref={webcamRef}\n            muted={true}\n            videoConstraints={{ facingMode: \"environment\" }}\n            className=\"webcam\"\n          />\n          <canvas ref={canvasRef} className=\"canvas\" />\n        </div>\n      </section>\n      <footer className=\"app-footer\">\n        <div className=\"camera-icon-container\">\n          <IoCameraReverse className=\"camera-icon\" onClick={swapCamera} />\n        </div>\n        <div className=\"app-footer-text\">\n          <h3>made by Gino Swanepoel</h3>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}